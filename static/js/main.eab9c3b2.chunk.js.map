{"version":3,"sources":["components/Phonebook/Phonebook.module.css","components/Section/Section.module.css","components/Filter/Filter.module.css","components/Section/Section.js","redux/actions.js","components/Contacts/Contacts.js","components/Phonebook/Phonebook.js","components/Filter/Filter.js","App.js","redux/reducers.js","redux/store.js","index.js","components/Contacts/Contacts.module.css"],"names":["module","exports","Section","children","className","style","section","shortid","require","addContact","createAction","data","payload","id","generate","deleteContact","filterContact","Contacts","dispatch","useDispatch","contacts","useSelector","state","filter","items","normalizedFilter","toLowerCase","contact","name","includes","container","title","list","map","number","listElement","btn","onClick","onDeleteContact","PhoneBook","submitForm","useState","setName","setNumber","handleChangeInput","e","value","currentTarget","target","formReset","containerForm","onSubmit","preventDefault","type","onChange","pattern","required","Filter","label","event","App","itemContactReducer","createReducer","action","search","find","el","alert","filtered","filterContactReducer","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistore","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.eab9c3b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerForm\":\"Phonebook_containerForm__idGJ_\",\"title\":\"Phonebook_title__2A4Yy\",\"btn\":\"Phonebook_btn__3AD6S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1sDm6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2I-Gk\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./Section.module.css\";\r\n\r\nconst Section = ({ children }) => <div className={style.section}>{children}</div>;\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;","import { createAction } from \"@reduxjs/toolkit\";\r\nconst shortid = require(\"shortid\");\r\n\r\nexport const addContact = createAction(\"contacts/add\", (data) => ({\r\n  payload: {\r\n    ...data,\r\n    id: shortid.generate(),\r\n  },\r\n}));\r\n\r\nexport const deleteContact = createAction(\"contacts/delete\");\r\n\r\nexport const filterContact = createAction(\"contacts/changeFilter\");","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { deleteContact } from \"../../redux/actions\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./Contacts.module.css\";\r\n\r\nconst Contacts = () => {\r\n  const dispatch = useDispatch();\r\n  const onDeleteContact = (id) => dispatch(deleteContact(id));\r\n\r\n  const getContactList = (state) => {\r\n    const { filter, items } = state.contacts;\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return items.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  };\r\n  const contacts = useSelector(getContactList);\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <h2 className={style.title}>Contacts</h2>\r\n        <ul className={style.list}>\r\n          {contacts.map(({ id, name, number }) => (\r\n            <li key={id} className={style.listElement}>\r\n              <p>\r\n                {name}: {number}\r\n              </p>\r\n              <button className={style.btn} onClick={() => onDeleteContact(id)}>\r\n                Delete contact\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default Contacts;","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addContact } from \"../../redux/actions\";\r\nimport style from \"./Phonebook.module.css\";\r\n\r\nfunction PhoneBook({ submitForm }) {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleChangeInput = (e) => {\r\n    const { value } = e.currentTarget;\r\n\r\n    if (e.target.name === \"name\") {\r\n      setName(value);\r\n    }\r\n    if(e.target.name === \"number\") {\r\n      setNumber(value);  \r\n    }\r\n  };\r\n\r\n  const onSubmitForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    //submitForm({ name, number });\r\n    dispatch(addContact({ name, number }));\r\n    formReset();\r\n  };\r\n\r\n  const formReset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className={style.containerForm} onSubmit={onSubmitForm}>\r\n      <h2 className={style.title}>Phonebook</h2>\r\n      <label>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleChangeInput}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleChangeInput}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button className={style.btn} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\n\r\nexport default PhoneBook;","import { useDispatch } from \"react-redux\";\r\nimport { filterContact } from \"../../redux/actions\";\r\nimport style from \"./Filter.module.css\";\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onFilter = (event) => dispatch(filterContact(event.target.value));\r\n\r\n  return (\r\n    <label className={style.label}>\r\n      Find contacts by name:\r\n      <input type=\"text\" name=\"filter\" onChange={onFilter} />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;","import Section from \"./components/Section/Section\";\nimport Contacts from \"./components/Contacts/Contacts\";\nimport PhoneBook from \"./components/Phonebook/Phonebook\";\nimport Filter from \"./components/Filter/Filter\";\n\nfunction App() {\n  return (\n      <Section>\n        <PhoneBook />\n      <Filter />\n      <Contacts />\n      </Section>\n  );\n}\n\nexport default App;","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nimport { addContact, deleteContact, filterContact } from \"./actions\";\r\n\r\nconst itemContactReducer = createReducer([], {\r\n  [addContact]: (state, action) => {\r\n    const search = state.find(\r\n      (el) => el.name.toLowerCase() === action.payload.name.toLowerCase()\r\n    );\r\n    if (search) {\r\n      alert(`${search.name} is already in contacts.`);\r\n      return;\r\n    }\r\n    return [...state, action.payload];\r\n  },\r\n  [deleteContact]: (state, action) => {\r\n    const filtered = state.filter((el) => el.id !== action.payload);\r\n    return [...filtered];\r\n  },\r\n});\r\n\r\nconst filterContactReducer = createReducer(\"\", {\r\n  [filterContact]: (state, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items: itemContactReducer,\r\n  filter: filterContactReducer,\r\n});","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport contactReducer from \"./reducers\";\r\n\r\nconst contactsPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactReducer),\r\n  },\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  devTools: process.env.NODE_ENV !== \"production\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nconst persistore = { store, persistor };\r\n\r\nexport default persistore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport App from './App';\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n    <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Contacts_container__3Xlbm\",\"title\":\"Contacts_title__3qCbh\",\"list\":\"Contacts_list__IRhA9\",\"listElement\":\"Contacts_listElement__1uxJ2\",\"btn\":\"Contacts_btn__2MGVM\",\"label\":\"Contacts_label__21MPT\"};"],"sourceRoot":""}